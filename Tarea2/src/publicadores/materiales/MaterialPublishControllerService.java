
package materiales;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.3
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "MaterialPublishControllerService", targetNamespace = "http://publicadores/", wsdlLocation = "http://localhost:8080/materiales?wsdl")
public class MaterialPublishControllerService
    extends Service
{

    private static final URL MATERIALPUBLISHCONTROLLERSERVICE_WSDL_LOCATION;
    private static final WebServiceException MATERIALPUBLISHCONTROLLERSERVICE_EXCEPTION;
    private static final QName MATERIALPUBLISHCONTROLLERSERVICE_QNAME = new QName("http://publicadores/", "MaterialPublishControllerService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:8080/materiales?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MATERIALPUBLISHCONTROLLERSERVICE_WSDL_LOCATION = url;
        MATERIALPUBLISHCONTROLLERSERVICE_EXCEPTION = e;
    }

    public MaterialPublishControllerService() {
        super(__getWsdlLocation(), MATERIALPUBLISHCONTROLLERSERVICE_QNAME);
    }

    public MaterialPublishControllerService(WebServiceFeature... features) {
        super(__getWsdlLocation(), MATERIALPUBLISHCONTROLLERSERVICE_QNAME, features);
    }

    public MaterialPublishControllerService(URL wsdlLocation) {
        super(wsdlLocation, MATERIALPUBLISHCONTROLLERSERVICE_QNAME);
    }

    public MaterialPublishControllerService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MATERIALPUBLISHCONTROLLERSERVICE_QNAME, features);
    }

    public MaterialPublishControllerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MaterialPublishControllerService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns MaterialPublishController
     */
    @WebEndpoint(name = "MaterialPublishControllerPort")
    public MaterialPublishController getMaterialPublishControllerPort() {
        return super.getPort(new QName("http://publicadores/", "MaterialPublishControllerPort"), MaterialPublishController.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MaterialPublishController
     */
    @WebEndpoint(name = "MaterialPublishControllerPort")
    public MaterialPublishController getMaterialPublishControllerPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://publicadores/", "MaterialPublishControllerPort"), MaterialPublishController.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MATERIALPUBLISHCONTROLLERSERVICE_EXCEPTION!= null) {
            throw MATERIALPUBLISHCONTROLLERSERVICE_EXCEPTION;
        }
        return MATERIALPUBLISHCONTROLLERSERVICE_WSDL_LOCATION;
    }

}
